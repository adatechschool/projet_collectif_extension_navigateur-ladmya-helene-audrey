// API memory
function masquerlediv(){
  var container_Elt = document.getElementById('ledivamasquer');
  container_Elt.classList.add("le_div_masque");
  container_Elt.classList.remove("le_div_visible");
}
let askWord = document.getElementsByClassName('.text').value
let showEmoji = document.getElementsByClassName('.emoji-translation')


const dicoEmojis =  {
  "ballon": "üéà",
  "lettre d'amour": "üíå",
  "aime":"‚ô•Ô∏è",
  "c≈ìur bris√©": "üíî",
  "aime plus": "üíî",
  "aimes plus": "üíî",
  "canard": "ü¶Ü",
  "canards": "ü¶Ü",
  "caca":"üí©",
  "banane": "üçå",
  "feu": "üî•",
  "br√ªle": "üî•üî•",
  "fant√¥me": "üëª",
  "singe": "üêí",
  "abeille": "üêù",
  "morte de rire":"ü§£",
  "mort de rire":"ü§£",
  "clin d'oeil":"üòâ",
  "embrasse":"üòò",
  "envie":"üòç",
  "s'il-te-pla√Æt":"ü•∫",
  "√©nerve":"üò§",
  "√©nerves":"üò§",
  "√©nerver":"üò§",
  "mortel":"‚ò†Ô∏è",
  "ok":"üëç",
  "daccord":"üëç",
  "nul":"üëéüèΩ",
  "danser":"üíÉüèΩ",
  "danses":"üíÉüèΩ",
  "danse":"üíÉüèΩ",
  "fumer":"üö¨ üò∂‚Äçüå´Ô∏è",
  "fi√®vre":"ü§í",
  "rhume":"ü§ß",
  "covid":"ü§Æü§ßü§í",
  "malade":"ü§¢",
  "code":"üíªü§Ø",
  "coder":"ü§Ø",
  "codes":"ü§Ø",
  "nounours":"üß∏",
  "peluche":"üß∏",
  "dragon":"üêâ",
  "cadeau":"üéÅ",
  "ninja":"ü•∑üèº",
  "discret":"ü•∑üèº",
  "heureux":"üòÅ",
  "heureuse":"üòÅ",
  "joyeux":"üòÅ",
  "joyeuse":"üòÅ",
  "tais-toi":"ü§´",
  "taire":"ü§´",
  "rien vu":"üôà",
  "rien entendu":"üôâ",
  "rien dis":"üôä",
  "poulpe":"üêô",
  "chat":"üêà‚Äç‚¨õ",
  "chatte":"üêà‚Äç‚¨õ",
};
// word & correspondance : variable creation
// [word, correspondance]: key : value = 'ballon','üéà';

for (const [word, correspondance] of Object.entries(dicoEmojis)) {
showEmoji = askWord.replace(word,correspondance);
showEmoji = showEmoji.toLowerCase().replace(word,correspondance);
showEmoji = showEmoji.toUpperCase().replace(word,correspondance);
}
console.log(showEmoji);

/*chrome.runtime.onInstalled.addListener(() => {
  chrome.storage.sync.set({ dicoEmojis });
  console.log('DicoEmojis', `dicoEmojis: ${dicoEmojis}`);
});
*/

/*
Object.defineProperty(String.prototype, 'capitalize', {
    value: function() {
      return this.charAt(0).toUpperCase() + this.slice(1);
    },
    enumerable: false
  });

const dicoEmojis =  {
    "ballon": "üéà",
    "lettre": "üíå",
    "c≈ìur": "üíî",
    "canard": "ü¶Ü",
    "caca":"üí©",
    "banane": "üçå",
    "feu": "üî•",
    "fant√¥me": "üëª",
    "singe": "üêí",
    "abeille": "üêù",
};

//HTML: Balise parent =>  Head & Body : Balises enfants : => Balises enfants & petits-enfants : toutes les balises qu'il y a dedans
// Childnodes =  selectionne tous les elts ^m invisibles (sauts √† la ligne, comments, ...)
let askWord = prompt('');

function translate(toTranslate) { 
  replacedText = toTranslate.replace(toTranslate.dicoEmojis[toTranslate]);
  replacedText = toTranslate.replace(toTranslate.toLowerCase(), dicoEmojis[toTranslate]);
  replacedText = toTranslate.replace(toTranslate.toUpperCase(),dicoEmojis[toTranslate]);
  replacedText = toTranslate.replace(toTranslate.capitalize(),dicoEmojis[toTranslate]);
  return replacedText;
}
const result = translate(askWord);
translate();
console.log(result);
*/


/* Object.defineProperty(String.prototype,'capitalize', {
  value: function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
  },
  enumerable: false
});
*/

/*  
METHODE KEVIN
//for (const [word, correspondance] of Object.entries(dicoEmojis)) {}  

const monDico = {
  'bonjour': 'üëã',
  'monde': 'üåç'
}

let hello = ''
hello = 'bonjour tt le monde'

console.log(hello)

for (const [mot, correspondance] of Object.entries(monDico)) {
  //console.log(mot+' deviendra '+correspondance)
  hello = hello.replace(mot, correspondance)
}

console.log(hello)
*/